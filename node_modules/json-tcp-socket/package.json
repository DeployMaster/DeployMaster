{
  "name": "json-tcp-socket",
  "version": "1.0.1",
  "description": "JSON messaging over TCP sockets",
  "main": "json-tcp-socket.js",
  "directories": {
    "example": "examples"
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/rohanrhu/json-tcp-socket"
  },
  "keywords": [
    "json",
    "tcp",
    "socket",
    "net",
    "tls"
  ],
  "author": {
    "name": "Oğuzhan Eroğlu",
    "email": "rohanrhu2@gmail.com",
    "url": "http://oguzhaneroglu.com"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/rohanrhu/json-tcp-socket/issues"
  },
  "homepage": "https://github.com/rohanrhu/json-tcp-socket",
  "readme": "# json-tcp-socket\r\nJSON messaging over TCP sockets for node.js\r\n\r\n###Without TLS\r\n\r\nServer:\r\n\r\n```javascript\r\nvar JSONTCPSOCKET = require('json-tcp-socket');\r\n\r\nvar JSONTCPSOCKET = new JSONTCPSOCKET({tls: false});\r\nvar server = new JSONTCPSOCKET.Server();\r\n\r\nserver.on('connection', function (socket) {\r\n    console.log('client connected: ', socket.socket.remoteAddress);\r\n\r\n    socket.on('data', function (data) {\r\n        console.log('json:', data.item);\r\n    });\r\n\r\n    var a = {item: 'A', a: 'asda'};\r\n    var b = {item: 'B', b: 'asdasa'};\r\n    var c = {item: 'asdadsadsadsasd87a8ds7ads67ad6sa6dsa', a: 1, b: 2, c: 3, d: 'asda', d: 'asdadsa'};\r\n    var d = '{\"item\": \"asdaasda\", \"a\": \"1\", \"b\": \"2\", \"c\": \"3\", \"d\": \"asda\", \"d\": \"asdasda\"}';\r\n    var e = '{\"item\": \"ee\", \"a\": \"1\", \"d\": \"643\", \"d\": \"123\"}';\r\n    var f = '{\"item\": \"dd\", \"a\": \"1\", \"d\": \"643\", \"d\": \"123\"}';\r\n\r\n    socket.write(a);\r\n    socket.write(a);\r\n    socket.write(a);\r\n    socket.write(b);\r\n\r\n    setInterval(function () {\r\n        socket.write(e);\r\n    }, 1000);\r\n\r\n    setInterval(function () {\r\n        socket.write(f);\r\n    }, 1500);\r\n\r\n    socket.write(d);\r\n    socket.write(c);\r\n    socket.write(b);\r\n    socket.write(b);\r\n});\r\n\r\nserver.listen(5055, '0.0.0.0');\r\n\r\nconsole.log('Server listening 0.0.0.0:5055');\r\n```\r\n\r\nClient:\r\n\r\n```javascript\r\nvar JSONTCPSOCKET = require('json-tcp-socket');\r\n\r\nvar JSONTCPSOCKET = new JSONTCPSOCKET({tls: false});\r\nvar socket = new JSONTCPSOCKET.Socket();\r\n\r\nsocket.on('connect', function () {\r\n    console.log('connected');\r\n\r\n    socket.on('data', function (data) {\r\n        console.log('json:', data.item);\r\n    });\r\n\r\n    var a = {item: 'A', a: 'asda'};\r\n    var b = {item: 'B', b: 'asda'};\r\n    var c = {item: 'asda', a: 1, b: 2, c: 3, d: 'asda', d: 'asda'};\r\n    var d = '{\"item\": \"98989182391829381\", \"a\": \"1\", \"b\": \"2\", \"c\": \"3\", \"d\": \"asda\", \"d\": \"1231321\"}';\r\n    var e = '{\"item\": \"ee\", \"a\": \"1\", \"d\": \"643\", \"d\": \"123\"}';\r\n    var f = '{\"item\": \"dd\", \"a\": \"1\", \"d\": \"643\", \"d\": \"123\"}';\r\n\r\n    socket.write(a);\r\n    socket.write(d);\r\n    socket.write(b);\r\n\r\n    setInterval(function () {\r\n        socket.write(e);\r\n    }, 1000);\r\n\r\n    setInterval(function () {\r\n        socket.write(f);\r\n    }, 1500);\r\n\r\n    socket.write(b);\r\n    socket.write(a);\r\n    socket.write(a);\r\n    socket.write(a);\r\n    socket.write(c);\r\n});\r\n\r\nsocket.connect(5055, '127.0.0.1');\r\n```\r\n\r\n### TLS\r\n\r\nServer:\r\n\r\n```javascript\r\nvar fs = require('fs');\r\nvar JSONTCPSOCKET = require('json-tcp-socket');\r\n\r\nvar JSONTCPSOCKET = new JSONTCPSOCKET({tls: true});\r\nvar server = new JSONTCPSOCKET.Server({\r\n    key: fs.readFileSync(__dirname+'/cert/tls.key'),\r\n    cert: fs.readFileSync(__dirname+'/cert/tls.crt')\r\n});\r\n\r\nserver.on('secureConnection', function (socket) {\r\n    console.log('client connected: ', socket.socket.remoteAddress);\r\n\r\n    socket.on('data', function (data) {\r\n        console.log('json:', data.item);\r\n    });\r\n\r\n    var a = {item: 'A', a: 'asdasda'};\r\n    var b = {item: 'B', b: 'asdasda'};\r\n    var c = {item: '1231', a: 1, b: 2, c: 3, d: '1231321', d: '1231321'};\r\n    var d = '{\"item\": \"98989182391829381\", \"a\": \"1\", \"b\": \"2\", \"c\": \"3\", \"d\": \"1231\", \"d\": \"1231231\"}';\r\n    var e = '{\"item\": \"ee\", \"a\": \"1\", \"d\": \"643\", \"d\": \"123\"}';\r\n    var f = '{\"item\": \"dd\", \"a\": \"1\", \"d\": \"643\", \"d\": \"123\"}';\r\n\r\n    socket.write(a);\r\n    socket.write(a);\r\n    socket.write(a);\r\n    socket.write(b);\r\n\r\n    setInterval(function () {\r\n        socket.write(e);\r\n    }, 1000);\r\n\r\n    setInterval(function () {\r\n        socket.write(f);\r\n    }, 1500);\r\n\r\n    socket.write(d);\r\n    socket.write(c);\r\n    socket.write(b);\r\n    socket.write(b);\r\n});\r\n\r\nserver.listen(5055, '0.0.0.0');\r\n\r\nconsole.log('Server listening 0.0.0.0:5055 over TLS');\r\n```\r\n\r\nClient:\r\n\r\n```javascript\r\nvar JSONTCPSOCKET = require('json-tcp-socket');\r\n\r\nvar JSONTCPSOCKET = new JSONTCPSOCKET({tls: true});\r\nvar socket = new JSONTCPSOCKET.Socket();\r\n\r\nsocket.on('secureConnect', function () {\r\n    console.log('connected');\r\n\r\n    socket.on('data', function (data) {\r\n        console.log('json:', data.item);\r\n    });\r\n\r\n    var a = {item: 'A', a: 'asda'};\r\n    var b = {item: 'B', b: 'asda'};\r\n    var c = {item: '1231', a: 1, b: 2, c: 3, d: '1231', d: '1231'};\r\n    var d = '{\"item\": \"1231\", \"a\": \"1\", \"b\": \"2\", \"c\": \"3\", \"d\": \"123\", \"d\": \"123132\"}';\r\n    var e = '{\"item\": \"ee\", \"a\": \"1\", \"d\": \"643\", \"d\": \"123\"}';\r\n    var f = '{\"item\": \"dd\", \"a\": \"1\", \"d\": \"643\", \"d\": \"123\"}';\r\n\r\n    socket.write(a);\r\n    socket.write(d);\r\n    socket.write(b);\r\n\r\n    setInterval(function () {\r\n        socket.write(e);\r\n    }, 1000);\r\n\r\n    setInterval(function () {\r\n        socket.write(f);\r\n    }, 1500);\r\n\r\n    socket.write(b);\r\n    socket.write(a);\r\n    socket.write(a);\r\n    socket.write(a);\r\n    socket.write(c);\r\n});\r\n\r\nsocket.connect({\r\n    port: 5055,\r\n    host: '127.0.0.1',\r\n    rejectUnauthorized: false\r\n});\r\n```\r\n\r\n##License\r\nMIT\r\n",
  "readmeFilename": "README.md",
  "_id": "json-tcp-socket@1.0.1",
  "_shasum": "7344129b14bc1c9436e53cc2614d670f684b4ce2",
  "_from": "json-tcp-socket@"
}
